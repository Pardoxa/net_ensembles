window.SIDEBAR_ITEMS = {"enum":[["EntropicErrors","Error states, that entropic sampling, or the creation of `EntropicSamplingAdaptive` could encounter"],["ExtremeInterval","Enum used internally"],["GlueErrors","Possible errors that can occur during gluing together WangLandau intervals or Entropic Sampling intervals"],["GnuplotAxis","For labeling the gnuplot plots axis"],["GnuplotPalette","defines presets for different color palettes"],["GnuplotTerminal","Options for choosing gnuplot Terminal"],["HeatmapError","Errors of Heatmap"],["HistErrors","Possible Errors of the traits `Histogram` and `HistogramVal`"],["LogBase","Which LogBase is being used/should be used?"],["MetropolisError","Errors encountered during Metropolis Algorithm"],["RewlBuilderErr","Errors"],["RewlCreationErrors","Errors encountered during the creation of a Rewl struct (Replica exchange Wang Landau)"],["SetInitialError","Possible errors when setting initial guess"],["ThresholdErrors",""],["WangLandauErrors","List of possible errors"],["WangLandauMode","Look at the paper"]],"fn":[["average_merged_and_aligned","Calculate the probability density function from overlapping intervals"],["bootstrap","returns reduced value + estimated error (as sqrt of variance). Note, that you can use bootstrap_copyable  if your `N1` implements Copy"],["bootstrap_copyable","Similar to bootstrap but for stuff that implements `Copy`. Likely more effient in these cases returns reduced value + estimated error (as sqrt of variance)"],["derivative_glue_and_align","Results of the simulation"],["derivative_glue_and_align_ignore","TODO Documentation"],["derivative_merged_and_aligned","Calculate the probability density function from overlapping intervals"],["glue_entropic","Combine multiple WangLandau intervals to get the probability distribution of the whole interval"],["glue_wl","Combine multiple WangLandau intervals to get the probability distribution of the whole interval"],["heatmap_index","Get index of heatmap corresponding to a coordinate"],["log_probability_and_align","Results of the simulation"],["log_probability_and_align_ignore","Results of the simulation"],["merged_log_prob_ignore","Merge probability density of multiple rees simulations"],["norm_log10_sum_to_1","Normalize log10 probability density"]],"mod":[["bootstrap","Bootstrap resampling functions"],["entropic_sampling","For using entropic sampling after a wang landau simulation"],["examples","Contains examples"],["glue","Glue together overlapping intervals of either entropic sampling or wang landau"],["heatmap","Generate heatmaps. Create Gnuplot scripts to plot said heatmaps"],["histogram","Traits for implementing histograms for Wang Landau or entropic sampling. Contains histogram implementations for all primitive numbers"],["metropolis","For making a Metropolis simulation"],["rees","Entropic sampling using a replica exchange approach"],["rewl","Replica exchange wang-landau"],["traits","Contains traits useful for sampling an ensemble like MarkovChain or Metropolis etc."],["wang_landau","Wang Landau Implementation"]],"struct":[["AtomicHistogramFloat","Generic Histogram struct"],["AtomicHistogramInt","Generic Histogram for integer types"],["ColorRGB","RGB value"],["CubeHelixParameter","Implements color palett from https://arxiv.org/abs/1108.5083"],["EntropicSampling","Entropic sampling made easy"],["EntropicSamplingAdaptive","Entropic sampling made easy"],["GlueResult","Glued together probability"],["GnuplotPointSettings","Defines gnuplot point"],["GnuplotSettings","Settings for gnuplot"],["HeatmapF64","Heatmap"],["HeatmapF64Mean","Heatmap with mean of y-axis"],["HeatmapUsize","Heatmap"],["HeatmapUsizeMean","Heatmap with mean of y-axis"],["HistogramFast","Faster version of HistogramInt for Integers"],["HistogramFloat","Generic Histogram struct"],["HistogramInt","Generic Histogram for integer types"],["Metropolis","Create a metropolis simulation"],["PaletteRGB","A color palette in RGB space"],["ReesWalker","Walker for Replica exchange entropic sampling"],["ReplicaExchangeEntropicSampling","Struct used for entropic sampling with replica exchanges"],["ReplicaExchangeWangLandau","Efficient replica exchange Wang landau"],["ReplicaExchangeWangLandauBuilder","Use this to create a replica exchange wang landau simulation"],["ReplicaGlued","Result of the gluing"],["RewlWalker","Walker for Replica exchange Wang Landau"],["WangLandau1T","The 1/t Wang Landau approach comes from this paper"],["WangLandauAdaptive","Adaptive WangLandau 1/t"]],"trait":[["AtomicHistogram","Implements histogram"],["AtomicHistogramVal","trait used for mapping values of arbitrary type `T` to binsused to create a histogram"],["Entropic","Traits for quantities that all Entropic simulations have"],["EntropicEEH","Helper trait, so that you have to type less"],["EntropicEnergy","trait to request the current energy from a Entropic simulation"],["EntropicEnsemble","trait to request a reference to the current (state of the) ensemble"],["EntropicHist","trait to request the current histogram from a Entropic simulation"],["HasRng","Access internal random number generator"],["HasUnsignedVersion","Helper trait for efficient calculations in other implementations"],["Histogram","Implements histogram"],["HistogramCombine","Used to get a histogram, which contains the smaller histograms"],["HistogramIntervalDistance","Distance metric for how far a value is from a valid interval"],["HistogramPartition","Your Interval is to large to sample in a resonable amound of time? No problem"],["HistogramVal","trait used for mapping values of arbitrary type `T` to binsused to create a histogram"],["IntervalOrder","Trait for comparing two intervals"],["MarkovChain","Create a markov chain by doing markov steps"],["SimpleSample","For easy sampling of your ensemble"],["WangLandau","Traits for quantities that all Wang Landau simulations have"],["WangLandauEEH","Helper trait, so that you have to type less"],["WangLandauEnergy","trait to request the current energy from a WangLandau simulation"],["WangLandauEnsemble","trait to request a reference to the current (state of the) ensemble"],["WangLandauHist","trait to request the current histogram from a WangLandau simulation"]],"type":[["AtomicHistF32","Histogram for binning `f32` - alias for `HistogramFloat<f32>`"],["AtomicHistF64","Histogram for binning `f64` - alias for `HistogramFloat<f64>`"],["AtomicHistI128","Histogram for binning `i128` - alias for `AtomicHistogramInt<i128>`"],["AtomicHistI16","Histogram for binning `i16` - alias for `AtomicHistogramInt<i16>`"],["AtomicHistI32","Histogram for binning `i32` - alias for `AtomicHistogramInt<i32>`"],["AtomicHistI64","Histogram for binning `i64` - alias for `AtomicHistogramInt<i64>`"],["AtomicHistI8","Histogram for binning `i8` - alias for `AtomicHistogramIntiu8>`"],["AtomicHistIsize","Histogram for binning `isize` - alias for `AtomicHistogramInt<isize>`"],["AtomicHistU128","Histogram for binning `u128` - alias for `AtomicHistogramInt<u128>`"],["AtomicHistU16","Histogram for binning `u16` - alias for `AtomicHistogramInt<u16>`"],["AtomicHistU32","Histogram for binning `u32` - alias for `AtomicHistogramInt<u32>`"],["AtomicHistU64","Histogram for binning `u64` - alias for `AtomicHistogramInt<u64>`"],["AtomicHistU8","Histogram for binning `u8` - alias for `AtomicHistogramInt<u8>`"],["AtomicHistUsize","Histogram for binning `usize` - alias for `AtomicHistogramInt<usize>`"],["Glued","Result of glueing"],["GluedResult","Result of glueing. See [Glued]"],["HeatmapU","Shorthand for HeatmapUsize"],["HistF32","Histogram for binning `f32` - alias for `HistogramFloat<f32>`"],["HistF64","Histogram for binning `f64` - alias for `HistogramFloat<f64>`"],["HistI128","Histogram for binning `i128` - alias for `HistogramInt<i128>`"],["HistI128Fast","Histogram for binning `i128` - alias for `HistogramFast<i128>`"],["HistI16","Histogram for binning `i16` - alias for `HistogramInt<i16>`"],["HistI16Fast","Histogram for binning `i16` - alias for `HistogramFast<i16>`"],["HistI32","Histogram for binning `i32` - alias for `HistogramInt<i32>`"],["HistI32Fast","Histogram for binning `i32` - alias for `HistogramFast<i32>`"],["HistI64","Histogram for binning `i64` - alias for `HistogramInt<i64>`"],["HistI64Fast","Histogram for binning `i64` - alias for `HistogramFast<i64>`"],["HistI8","Histogram for binning `i8` - alias for `HistogramIntiu8>`"],["HistI8Fast","Histogram for binning `i8` - alias for `HistogramFastiu8>`"],["HistIsize","Histogram for binning `isize` - alias for `HistogramInt<isize>`"],["HistIsizeFast","Histogram for binning `isize` - alias for `HistogramFast<isize>`"],["HistU128","Histogram for binning `u128` - alias for `HistogramInt<u128>`"],["HistU128Fast","Histogram for binning `u128` - alias for `HistogramFast<u128>`"],["HistU16","Histogram for binning `u16` - alias for `HistogramInt<u16>`"],["HistU16Fast","Histogram for binning `u16` - alias for `HistogramFast<u16>`"],["HistU32","Histogram for binning `u32` - alias for `HistogramInt<u32>`"],["HistU32Fast","Histogram for binning `u32` - alias for `HistogramFast<u32>`"],["HistU64","Histogram for binning `u64` - alias for `HistogramInt<u64>`"],["HistU64Fast","Histogram for binning `u64` - alias for `HistogramFast<u64>`"],["HistU8","Histogram for binning `u8` - alias for `HistogramInt<u8>`"],["HistU8Fast","Histogram for binning `u8` - alias for `HistogramFast<u8>`"],["HistUsize","Histogram for binning `usize` - alias for `HistogramInt<usize>`"],["HistUsizeFast","Histogram for binning `usize`- alias for `HistogramFast<usize>`"],["MetF32","short for `Metropolis<E, R, S, Res, f32>`"],["MetF64","short for `Metropolis<E, R, S, Res, f64>`"],["MetI128","short for `Metropolis<E, R, S, Res, i128>`"],["MetI16","short for `Metropolis<E, R, S, Res, i16>`"],["MetI32","short for `Metropolis<E, R, S, Res, i32>`"],["MetI64","short for `Metropolis<E, R, S, Res, i64>`"],["MetI8","short for `Metropolis<E, R, S, Res, i8>`"],["MetIsize","short for `Metropolis<E, R, S, Res, isize>`"],["MetU128","short for `Metropolis<E, R, S, Res, u128>`"],["MetU16","short for `Metropolis<E, R, S, Res, u16>`"],["MetU32","short for `Metropolis<E, R, S, Res, u32>`"],["MetU64","short for `Metropolis<E, R, S, Res, u64>`"],["MetU8","short for `Metropolis<E, R, S, Res, u8>`"],["MetUsize","short for `Metropolis<E, R, S, Res, usize>`"],["Rees","Short for [ReplicaExchangeEntropicSampling]"],["Rewl","Short for `ReplicaExchangeWangLandau`,  which you can look at for citations"],["RewlBuilder","Short for `ReplicaExchangeWangLandauBuilder`"]]};